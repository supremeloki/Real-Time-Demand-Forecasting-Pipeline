apiVersion: apps/v1
kind: Deployment
metadata:
  name: snapp-demand-forecaster-api
  labels:
    app: snapp-demand-forecaster
    component: inference-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: snapp-demand-forecaster
      component: inference-api
  template:
    metadata:
      labels:
        app: snapp-demand-forecaster
        component: inference-api
    spec:
      containers:
      - name: inference-api-container
        image: registry.example.com/snapp-demand-forecast-inference:latest
        ports:
        - containerPort: 80
        env:
        - name: APP_ENV
          value: "prod"
        - name: MLFLOW_TRACKING_URI
          value: "postgresql://mlflow_user:password@mlflow-db:5432/mlflow_db" # Or K8s secret reference
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: snapp-demand-forecaster-api-service
  labels:
    app: snapp-demand-forecaster
    component: inference-api
spec:
  selector:
    app: snapp-demand-forecaster
    component: inference-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer # For external access
